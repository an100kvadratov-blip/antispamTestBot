import os
import re
import logging
from telegram import Update
from telegram.ext import Application, MessageHandler, filters
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è `httpx`
logging.getLogger("httpx").setLevel(logging.WARNING)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get("TOKEN")
OWNER_ID = int(os.environ.get("OWNER_ID"))
PROTECTED_CHANNEL_ID = int(os.environ.get("PROTECTED_CHANNEL_ID"))
URL = os.environ.get("URL")

# –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Å–ø–∞–º–∞
SPAM_PATTERNS = [
    re.compile(r"–∑–∞—Ä–∞–±–æ—Ç–æ–∫", re.IGNORECASE),
    re.compile(r"–±—ã—Å—Ç—Ä—ã–π –¥–æ—Ö–æ–¥", re.IGNORECASE),
    re.compile(r"–±–∏–Ω–∞—Ä–Ω—ã–µ –æ–ø—Ü–∏–æ–Ω—ã", re.IGNORECASE),
    re.compile(r"–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç", re.IGNORECASE),
    re.compile(r"\b–∞–∫—Ü–∏–∏\b", re.IGNORECASE),
    re.compile(r"\b–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏\b", re.IGNORECASE),
    re.compile(r"—Ç—Ä–µ–π–¥–∏–Ω–≥", re.IGNORECASE),
    re.compile(r"–ø–æ–¥–∞—Ä–æ–∫", re.IGNORECASE),
    re.compile(r"–±–µ—Å–ø–ª–∞—Ç–Ω–æ", re.IGNORECASE),
    re.compile(r"–∫–∞–Ω–∞–ª", re.IGNORECASE),
    re.compile(r"telegram", re.IGNORECASE),
    re.compile(r"whatsapp", re.IGNORECASE),
    re.compile(r"viber", re.IGNORECASE),
    re.compile(r"\b—á–∞—Ç\b", re.IGNORECASE),
    re.compile(r"\b–ø–∏—Å–∞—Ç—å –≤ –ª—Å\b", re.IGNORECASE),
    re.compile(r"https?://t\.me", re.IGNORECASE),
]

async def check_message(update: Update, context):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ø–∞–º–∞ –∏ —É–¥–∞–ª—è–µ—Ç –∏—Ö –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏."""
    message = update.effective_message
    if not message:
        return

    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞
    if message.from_user.id == OWNER_ID:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    if message.chat_id != PROTECTED_CHANNEL_ID:
        logger.info(
            "üìç –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –∏–∑ –Ω–µ–∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞: %s", message.chat_id
        )
        return

    text = message.text or ""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–æ–∫
    if message.entities:
        for entity in message.entities:
            if entity.type in ["url", "text_link"]:
                if "t.me" in entity.url:
                    logger.info("üîç –ù–∞–π–¥–µ–Ω —Å–ø–∞–º (t.me —Å—Å—ã–ª–∫–∞) –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç %s", message.from_user.id)
                    await delete_message(message)
                    return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ø–∞–º-–ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    for pattern in SPAM_PATTERNS:
        if pattern.search(text):
            logger.info("üîç –ù–∞–π–¥–µ–Ω —Å–ø–∞–º (%s) –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç %s", pattern.pattern, message.from_user.id)
            await delete_message(message)
            return

async def delete_message(message):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    try:
        await message.delete()
        logger.info("üóëÔ∏è –£–î–ê–õ–ï–ù–û —Å–ø–∞–º-—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç %s", message.from_user.id)
    except Exception as e:
        logger.error("üö´ –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: %s", e)

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç application –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
application = Application.builder().token(TOKEN).build()
# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
application.add_handler(
    MessageHandler(filters.TEXT & ~filters.COMMAND, check_message)
)

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    logger.info("ü§ñ –ê–Ω—Ç–∏—Å–ø–∞–º-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    logger.info("üìç –¢–æ–∫–µ–Ω: %s...", TOKEN[:10])
    logger.info("üëë ID –≤–ª–∞–¥–µ–ª—å—Ü–∞: [%s]", OWNER_ID)
    logger.info("üõ°Ô∏è –ó–∞—â–∏—â–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª: %s", PROTECTED_CHANNEL_ID)
    logger.info("üìä –†–µ–∂–∏–º –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω")

    if URL:
        application.run_webhook(
            listen="0.0.0.0",
            port=int(os.environ.get("PORT", "5000")),
            url_path=TOKEN,
            webhook_url=URL + TOKEN
        )
    else:
        application.run_polling(poll_interval=1.0)

if __name__ == "__main__":
    main()